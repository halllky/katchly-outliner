import React, { useState, useMemo, useCallback, useRef, useImperativeHandle } from "react"
import * as Util from "../util"
import { defineCustomComponent, AsyncComboBox, CustomComponentRef } from "../input"
import * as Types from "../autogenerated-types"

export const ComboBox親集約 = defineCustomComponent<Util.ItemKey>((props, ref) => {
  const [queryKey, setQueryKey] = useState<string>('combo-xe09725e2e5673c42591875254a98e3c9::')
  const { get } = Util.useHttpRequest()
  const query = useCallback(async (keyword: string | undefined): Promise<Types.親集約RefInfo[]> => {
    setQueryKey(`combo-xe09725e2e5673c42591875254a98e3c9::${keyword ?? ''}`)
    const response = await get<Types.親集約RefInfo []>(`/api/親集約/list-by-keyword`, { keyword })
    if (!response.ok) return []
    return response.data
  }, [get])

  return (
    <AsyncComboBox
      {...props}
      ref={ref}
      queryKey={queryKey}
      query={query}
      keySelector={({ __instanceKey }) => __instanceKey}
      textSelector={item => `${item.文章 ?? ''}`}
    />
  )
})
export const ComboBoxChildren = defineCustomComponent<Util.ItemKey>((props, ref) => {
  const [queryKey, setQueryKey] = useState<string>('combo-xc1bac9f2faee01df79a5b7cd5bc563ea::')
  const { get } = Util.useHttpRequest()
  const query = useCallback(async (keyword: string | undefined): Promise<Types.ChildrenRefInfo[]> => {
    setQueryKey(`combo-xc1bac9f2faee01df79a5b7cd5bc563ea::${keyword ?? ''}`)
    const response = await get<Types.ChildrenRefInfo []>(`/api/親集約/list-by-keyword-xc1bac9f2faee01df79a5b7cd5bc563ea`, { keyword })
    if (!response.ok) return []
    return response.data
  }, [get])

  return (
    <AsyncComboBox
      {...props}
      ref={ref}
      queryKey={queryKey}
      query={query}
      keySelector={({ __instanceKey }) => __instanceKey}
      textSelector={item => `${item.文章 ?? ''}`}
    />
  )
})
export const ComboBox参照先 = defineCustomComponent<Util.ItemKey>((props, ref) => {
  const [queryKey, setQueryKey] = useState<string>('combo-x0980ef37494eb0089d5695ded11e38fa::')
  const { get } = Util.useHttpRequest()
  const query = useCallback(async (keyword: string | undefined): Promise<Types.参照先RefInfo[]> => {
    setQueryKey(`combo-x0980ef37494eb0089d5695ded11e38fa::${keyword ?? ''}`)
    const response = await get<Types.参照先RefInfo []>(`/api/参照先/list-by-keyword`, { keyword })
    if (!response.ok) return []
    return response.data
  }, [get])

  return (
    <AsyncComboBox
      {...props}
      ref={ref}
      queryKey={queryKey}
      query={query}
      keySelector={({ __instanceKey }) => __instanceKey}
      textSelector={item => `${item.Name ?? ''}`}
    />
  )
})
