import { useCallback, useEffect, useRef } from 'react'
import * as Util from './__autoGenerated/util'
import * as Input from './__autoGenerated/input'
import { VerticalForm } from './__autoGenerated/collection'

type AppSetting = {
  userName?: string
}

export const [AppSettingContext, useAppSettings] = Util.defineStorageContext({
  storageKey: 'OUTLINER::APPSETTINGS',
  defaultValue: (): AppSetting => ({
    userName: '',
  }),
  deserialize: str => ({ ok: true, obj: JSON.parse(str) }),
  serialize: obj => JSON.stringify(obj),
})

/** 設定画面 */
export const AppSttingsDialog = ({ open, onClose }: {
  open: boolean
  onClose: () => void
}) => {
  const [, dispatchToast] = Util.useToastContext()
  const { post } = Util.useHttpRequest()

  const dialogRef = useRef<HTMLDialogElement>(null)
  Util.useOutsideClick(dialogRef, () => {
    onClose()
  }, [onClose])

  // アプリ設定
  const { data, save } = useAppSettings()
  const { reset, registerEx, handleSubmit } = Util.useFormEx<typeof data>({})
  useEffect(() => {
    reset(data)
  }, [data])
  const onSave = useCallback((newData: AppSetting) => {
    save(newData)
  }, [save])

  // データ操作
  const recreateDatabase = useCallback(async () => {
    if (window.confirm('DBを再作成します。データは全て削除されます。よろしいですか？')
      && window.confirm('後悔しませんね？')) {
      const response = await post('/WebDebugger/recreate-database')
      if (response.ok) {
        dispatchToast(msg => msg.info('DBを再作成しました。'))
      } else {
        dispatchToast(msg => msg.error('DBの再作成に失敗しました。'))
      }
    }
  }, [post, dispatchToast])

  return (
    <dialog ref={dialogRef} open={open} className="absolute inset-12 w-auto h-auto z-[20] border border-2 border-neutral-500">
      <form onSubmit={handleSubmit(onSave)} className="flex flex-col gap-4 p-4">
        <div className="flex items-center">
          <span className="font-bold text-lg">設定</span>
          <div className="flex-1"></div>
          <Input.IconButton onClick={onClose}>閉じる</Input.IconButton>
        </div>

        <VerticalForm.Container label="アプリ設定">
          <VerticalForm.Item label="ユーザー名">
            <Input.Word {...registerEx(`userName`)} />
          </VerticalForm.Item>
          <VerticalForm.Item wide>
            <Input.IconButton fill submit>保存</Input.IconButton>
          </VerticalForm.Item>
        </VerticalForm.Container>

        <VerticalForm.Container label="データ操作">
          <VerticalForm.Item wide>
            <Input.IconButton outline onClick={recreateDatabase}>DB再作成</Input.IconButton>
          </VerticalForm.Item>
        </VerticalForm.Container>
      </form>
    </dialog>
  )
}
